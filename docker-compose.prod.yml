version: "3.7"

services:
  apigateway:
    container_name: apigateway
    image: on91716/apigateway:latest
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-prod}
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - "8000:8080"

  verification-manager:
    container_name: verification-manager
    image: on91716/verification-manager:latest
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-prod}
    deploy:
      restart_policy:
        condition: on-failure

  transaction-manager:
    container_name: transaction-manager
    image: on91716/transaction-manager:latest
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-prod}
    deploy:
      restart_policy:
        condition: on-failure


  user-manager:
    container_name: user-manager
    image: on91716/user-manager:latest
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-prod}
    deploy:
      restart_policy:
        condition: on-failure

  redis:
    container_name: redis
    image: "redis:alpine"


#  zookeeper:
#    image: wurstmeister/zookeeper
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
#
#  kafka:
#    image: wurstmeister/kafka:2.12-2.5.0
#    container_name: kafka
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#
#
#  # For example
#  postgres:
#    image: postgres:13-alpine
#    container_name: postgres
#    environment:
#      - POSTGRES_DB=example
#      - POSTGRES_USER=admin
#      - POSTGRES_PASSWORD=123456
#    healthcheck:
#      test: "pg_isready -h localhost -p 5432 -q -U admin"
#      interval: 30s
#      timeout: 10s
#      retries: 7
#    ports:
#      - "5432:5432"
#    volumes:
#      - ./data/postgres-data:/var/lib/postgresql/data:cached
