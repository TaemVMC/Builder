version: "3.7"

services:
  apigateway:
    container_name: apigateway
    build:
      context: ../Apigateway # Apigateway 경로를 Github에서 로컬 디렉토리로 수정
      target: local # local 스테이지로 타겟을 바꾸면 ../Apigateway의 빌드 결과물(.jar)을 컨테이너에 복사한다. (컨테이너 내부 java 빌드 과정 X)
    image: apigateway:local # 태그명 수정은 식별하기 위함.
    environment:
      - SPRING_PROFILES_ACTIVE=dev # 필요할 경우 프로파일 수정(default, local, dev, prod)
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - "8000:8080"

  verification-manager:
    container_name: verification-manager
    build:
      context: https://github.com/TaemVMC/VerificationManager.git#development
      target: development
    image: verification-manager:development
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - "8001:8080" # 편의를 위한 포워딩. Prod에서는 삭제필요

  transaction-manager:
    container_name: transaction-manager
    build:
      context: https://github.com/TaemVMC/TransactionManager.git#development
      target: development
    image: transaction-manager:development
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - "8002:8080"

  user-manager:
    container_name: user-manager
    build:
      context: https://github.com/TaemVMC/UserManager.git#development
      target: development
    image: user-manager:development
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - "8003:8080"

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


  # For example
  postgres:
    image: postgres:13-alpine
    container_name: postgres
    environment:
      - POSTGRES_DB=example
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=123456
    healthcheck:
      test: "pg_isready -h localhost -p 5432 -q -U admin"
      interval: 30s
      timeout: 10s
      retries: 7
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres-data:/var/lib/postgresql/data:cached
